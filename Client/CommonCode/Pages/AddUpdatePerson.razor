@page "/addperson"
@page "/UpdatePerson/{Id:int}"
@using CommonCode.Models;
@using CommonCode.Services;
@inject IPersonService PersonService;





@inject IPersonService PersonService;


<h3>AddUpdatePerson</h3>

<div class="form-group d-flex">
   <div class=" form-group mx-2 ">
       <label for="Entry_Name">Nachname</label>
       <input id="Entry_Name" @bind="Nachname" class="form-control" />
   </div>

    <div class=" form-group mx-2 ">
       <label for="Entry_Vorname">Vorname</label>
       <input id="Entry_Vorname" @bind="Vorname" class="form-control" />
   </div>

    <div class=" form-group mx-2 ">
       <label for="Entry_Zwischenname">Zwischenname</label>
       <input id="Entry_Zwischenname" @bind="Zwischenname" class="form-control" />

   </div>
</div>

<div class="mt-3 form-group mx-2">
    <label>Gender</label>
    <div class="d-flex flex-row">
        <div class="form-check mr-3 mx-3">
            <input checked ="@(gender == "Male")" @onchange="@(()=>SetGender("Male"))" class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
            <label class="form-check-label" for="flexRadioDefault1">
                Male
            </label>
        </div>
        <div class="form-check mr-3 mx-3">
            <input checked="@(gender == "Female")" @onchange="@(()=>SetGender("Female"))" class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault2">
            <label class="form-check-label" for="flexRadioDefault2">
                Female
            </label>
        </div>
        <div class="form-check mx-3">
            <input checked="@(gender == "Divers")" @onchange="@(()=>SetGender("Divers"))" class="form-check-input" type="radio" name="flexRadioDefault" id="flexRadioDefault3">
            <label class="form-check-label" for="flexRadioDefault3">
                Divers
            </label>
        </div>
    </div>
</div>

<div class=" mt-2 form-group mx-2 ">
    <label for="Entry_Email">Email</label>
    <input id="Entry_Email" @bind="Email" type="email" class="form-control" />
</div>

<div class="mt-2 form-group mx-2">
    <label for="Entry_PhoneNumber">Telefonnummer</label>
    <input id="Entry_PhoneNumber" @bind="Telefonnummer" class="form-control" />
</div>


<div class=" mt-2 form-group d-flex">
   <div class="form-group mx-2" >
     <label for="Entry_Strasse">Strasse</label>
     <input id="Entry_Strasse" @bind="Strasse" class="form-control" />
   </div>
    <div class="col-md-4 mx-2">
        <label for="Entry_Hausnummer">Hausnummer</label>
        <input id="Entry_Hausnummer" @bind="Hausnummer" class="form-control" />
    </div>
    <div class="col-md-4 mx-2">
        <label for="Entry_PLZ">PLZ</label>
        <input id="Entry_PLZ" @bind="PLZ" class="form-control" />
    </div>
</div>

<div class=" mt-2 form-group d-flex">
    <div class="col-md-4 mx-2">
        <label for="Entry_Stadt">Stadt</label>
        <input id="Entry_Stadt" @bind="Stadt" class="form-control" />
    </div>
    <div class="form-group mx-2">
       <label for="Entry_Land">Land</label>
       <input id="Entry_Land" @bind="Land" class="form-control" />
      </div>
 </div>


<button @onclick=" AddUpdatePersonDetails" class="mt-3 btn btn-primary mx-1">Save</button>

@code {


    [Parameter]



    public int Id { get; set; }

    private string Nachname;
    private string Vorname;
    private string Zwischenname;
    private string Email;
    private string Telefonnummer;
    private string Strasse;
    private string Hausnummer;
    private string PLZ;
    private string Stadt;
    private string Land;
    private string gender;

    private void SetGender(string gender )

    {
        this. gender = gender;
    }

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            var existingPersonDetail = await PersonService.GetPersonDetailById(Id);
            if (existingPersonDetail?.Id> 0)
            {
                Nachname = existingPersonDetail.Nachname;
                Vorname = existingPersonDetail.Vorname;
                Zwischenname = existingPersonDetail.Zwischenname;
                Email = existingPersonDetail.Email;
                Telefonnummer = existingPersonDetail.Telefonnummer;
                Strasse = existingPersonDetail.Strasse;
                Hausnummer = existingPersonDetail.Hausnummer;
                PLZ = existingPersonDetail.PLZ.ToString();  // convert plz from int to string only here 
                Stadt = existingPersonDetail.Stadt;
                Land = existingPersonDetail.Land;
                gender = existingPersonDetail.Gender;


            }
        }
    }

    private async void AddUpdatePersonDetails()
    {
        var addUpdateRequest = new AddUpdatePersonRequest

            {
                Id = Id,

                Nachname = Nachname,
                Vorname = Vorname,
                Zwischenname = Zwischenname,
                Email = Email,
                Telefonnummer = Telefonnummer,
                Strasse = Strasse,
                Hausnummer = Hausnummer,
                PLZ = PLZ,
                Stadt = Stadt,
                Land = Land,
                Gender = gender,



            };

        if (Id > 0)
        {
            var response = await PersonService.UpdatePerson(addUpdateRequest);
            if (response.Success)
            {
                //await App.current.mainpage.displayalert("record updated", "contact updated successfully", "ok");
            }
            else
            {
               // await App.current.mainpage.displayalert("oops", response.ErrorMessage, "ok");
            }
        }
        else
        {



            var response = await PersonService.AddPerson(addUpdateRequest);

            if (response.Success)
            {
                Nachname = Vorname = Zwischenname = Email = Telefonnummer = Strasse = Hausnummer = PLZ = Stadt = Land = gender = string.Empty;

                this.StateHasChanged();

               // await App.Current.MainPage.DisplayAlert("Contact Added", "Contact Added Successfully", "OK");
            }
            else
            {
                //await App.Current.MainPage.DisplayAlert("Oops", response.ErrorMessage, "OK");
            }

        }
    }
}

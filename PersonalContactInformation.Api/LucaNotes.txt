For JSON File export we can probably just take the API-return of the function which gets all elements
For import we either need to find a way to loop through a list and add the elements through the existing addcontact function or we need to purpose build a complete function
idea 1:
PutJson()
{
	listFromJsonFile = read(whatever.JSON);
	lenght = howManyElements(listFromJsonFile);
	while(i <= length, i++)
	{
		contactToBeAdded = getLastEntry(listFromJsonFile);
		AddContact(contactToBeAdded);
		deleteLastEntry(listFromJsonFile);
	}
	return "all done";
}

idea 2:
this would be the same concept as above, but with a AddContact function which does not return a message (might print a "added contact" message for every entry)

idea 3:
there might also be a function which just adds a list to a sql database

(solved) now working on a query to convert JSON into A SQLTable, having some problems, basically getting either an error message or an empty table
above has been mitigated, still working on making the query

almost done

!!!!
change telnr and hausnr to string make own commit
(done)

next creating a new table to have the tel.nr. in, since one person can and/or will have more than one number
the Tel.Nr. table stores a PersonId which corresponds to the given Id in the Person Table
have to remove the Telefonnummer comlumn from people which likely needs me to remove it from the peolple class, since it seems like that's where sql is taking the columns from
so either a struct in person class or, which is more likely, a telefonnummer class
having to modify the adding and updating functions to go into the telnr table and make an entry or update data there
	considering if adding these numbers should be a seperate api call, basically having the frontend submit all the other data first and then submitting tel numbers one by one
	this may require some hacky calls
		addContac(allDataButTelNr) -> wait for database to do its thing -> addTelNr(listOfTelNr, PersonId) -> show addedSuccess if both operations were completed
		repeat this for updateOverwrite
		if updateMerge, call addTelNr(singleTel, PersonId)
		how to edit a certain TelNr, need to have an id for that, how to put id for that into person table
	need the people table to be able to point at telNr and telNr table to point at person table
		hau
	for update i can bulid updateTelNr(oldTelNr, newTelNr, PersonId)
	we should consider having limit on how many phone numbers a single contact can have, for example if we have 4 max, we might be able to have sql assign ids for data under a certain personI

Experimenting with TelNrId as a way to pass vaiables into functions, doesn't work that well
	have to find out how to take passed in tel numbers, since they should be saved to a seperate table than the rest, but the frontend obviously won't pass two db tables through the api
	maybe have it pass the tel. number as a seperate string and the person object without telId filled in
		this would also require me to build getTelNr (which i have to do anyways i guess)

My idea is now to have the people table have a column for TelId instead of Telefonnummer and have the TelNr table have PersonId, which should then be pointing at each other
	upon investigating on this idea it seems not impossible but normally i should make a third table, though i may be able to get around this

FirstOrDefaultAsync returns an object